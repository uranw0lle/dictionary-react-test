{"ast":null,"code":"var _jsxFileName = \"/home/markus/dictionary-app/src/components/header/Header.js\";\nimport { createTheme, TextField, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./Header.css\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport countries from \"../../data/category\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  category,\n  setCategory,\n  setWord,\n  word,\n  setMeanings,\n  LightMode\n}) => {\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: LightMode ? \"#000\" : \"#fff\"\n      },\n      type: LightMode ? \"light\" : \"dark\"\n    }\n  });\n\n  const handleChange = e => {\n    setCategory(e.target.value);\n    setWord(\"\");\n    setMeanings([]);\n  };\n\n  const handleText = debounce(text => {\n    setWord(text);\n  }, 500);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: word ? word : \"Find my word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: darkTheme,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"search\",\n          id: \"filled-basic\" // value={word}\n          ,\n          label: \"Search a word\",\n          onChange: e => handleText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"Language\",\n          value: category,\n          onChange: e => handleChange(e),\n          className: \"select\",\n          children: countries.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option.label,\n            children: option.value\n          }, option.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/markus/dictionary-app/src/components/header/Header.js"],"names":["createTheme","TextField","ThemeProvider","React","MenuItem","countries","debounce","Header","category","setCategory","setWord","word","setMeanings","LightMode","darkTheme","palette","primary","main","type","handleChange","e","target","value","handleText","text","map","option","label"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,aAAjC,QAAsD,mBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,QADc;AAEdC,EAAAA,WAFc;AAGdC,EAAAA,OAHc;AAIdC,EAAAA,IAJc;AAKdC,EAAAA,WALc;AAMdC,EAAAA;AANc,CAAD,KAOT;AACJ,QAAMC,SAAS,GAAGd,WAAW,CAAC;AAC5Be,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEJ,SAAS,GAAG,MAAH,GAAY;AADpB,OADF;AAIPK,MAAAA,IAAI,EAAEL,SAAS,GAAG,OAAH,GAAa;AAJrB;AADmB,GAAD,CAA7B;;AASA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1BX,IAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAME,QAAMW,UAAU,GAAGjB,QAAQ,CAAEkB,IAAD,IAAU;AACtCd,IAAAA,OAAO,CAACc,IAAD,CAAP;AACD,GAF4B,EAE1B,GAF0B,CAA3B;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,gBAAyBb,IAAI,GAAGA,IAAH,GAAU;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEG,SAAtB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,EAAC,QADZ;AAEE,UAAA,EAAE,EAAC,cAFL,CAGE;AAHF;AAIE,UAAA,KAAK,EAAC,eAJR;AAKE,UAAA,QAAQ,EAAGM,CAAD,IAAOG,UAAU,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,SAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,KAAK,EAAEd,QAHT;AAIE,UAAA,QAAQ,EAAGY,CAAD,IAAOD,YAAY,CAACC,CAAD,CAJ/B;AAKE,UAAA,SAAS,EAAC,QALZ;AAAA,oBAOGf,SAAS,CAACoB,GAAV,CAAeC,MAAD,iBACb,QAAC,QAAD;AAA6B,YAAA,KAAK,EAAEA,MAAM,CAACC,KAA3C;AAAA,sBACGD,MAAM,CAACJ;AADV,aAAeI,MAAM,CAACC,KAAtB;AAAA;AAAA;AAAA;AAAA,kBADD;AAPH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAxDD;;KAAMpB,M;AA0DN,eAAeA,MAAf","sourcesContent":["import { createTheme, TextField, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./Header.css\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport countries from \"../../data/category\";\nimport { debounce } from \"lodash\";\n\nconst Header = ({\n  category,\n  setCategory,\n  setWord,\n  word,\n  setMeanings,\n  LightMode,\n}) => {\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: LightMode ? \"#000\" : \"#fff\",\n      },\n      type: LightMode ? \"light\" : \"dark\",\n    },\n  });\n\n  const handleChange = (e) => {\n    setCategory(e.target.value);\n    setWord(\"\");\n    setMeanings([]);\n  };\n\n    const handleText = debounce((text) => {\n    setWord(text);\n  }, 500);\n\n  return (\n    <div className=\"header\">\n      <span className=\"title\">{word ? word : \"Find my word\"}</span>\n      <div className=\"inputs\">\n        <ThemeProvider theme={darkTheme}>\n          <TextField\n            className=\"search\"\n            id=\"filled-basic\"\n            // value={word}\n            label=\"Search a word\"\n            onChange={(e) => handleText(e.target.value)}\n          />\n          <TextField\n            select\n            label=\"Language\"\n            value={category}\n            onChange={(e) => handleChange(e)}\n            className=\"select\"\n          >\n            {countries.map((option) => (\n              <MenuItem key={option.label} value={option.label}>\n                {option.value}\n              </MenuItem>\n            ))}\n          </TextField>\n        </ThemeProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}