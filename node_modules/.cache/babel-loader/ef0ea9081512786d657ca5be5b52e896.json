{"ast":null,"code":"import _regeneratorRuntime from\"/home/markus/dictionary-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/markus/dictionary-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/markus/dictionary-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import axios from'axios';import{useEffect,useState}from'react';import{Container,withStyles}from\"@material-ui/core\";import Header from'./components/header/Header';import{Definitions}from'./components/Definitions/Definitions.js';import{grey}from'@material-ui/core/colors';import Switch from'@material-ui/core/Switch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),word=_useState2[0],setWord=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),meanings=_useState4[0],setMeanings=_useState4[1];var _useState5=useState(\"en\"),_useState6=_slicedToArray(_useState5,2),category=_useState6[0],setCategory=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),LightMode=_useState8[0],setLightMode=_useState8[1];var DarkMode=withStyles({switchBase:{color:grey[300],'&$checked':{color:grey[500]},'&$checked + $track':{backgroundColor:grey[500]}},checked:{},track:{}})(Switch);var dictionaryApi=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://api.dictionaryapi.dev/api/v2/entries/\".concat(category,\"/\").concat(word));case 3:data=_context.sent;setMeanings(data.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function dictionaryApi(){return _ref.apply(this,arguments);};}();useEffect(function(){dictionaryApi();});/* [word, category] */return/*#__PURE__*/_jsx(\"div\",{className:\"App\",style:{height:\"100vh\",backgroundColor:LightMode?\"#fff\":\"#282c34\",color:LightMode?\"black\":\"white\",transition:\"all 0.2s linear\"},children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",style:{display:\"flex\",flexDirection:\"column\",height:\"100vh\",justifyContent:\"space-evenly\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:0,right:15,paddingTop:10},children:[/*#__PURE__*/_jsx(\"span\",{children:LightMode?\"Dark Mode\":\"Light Mode\"}),/*#__PURE__*/_jsx(DarkMode,{checked:LightMode,onChange:function onChange(){return setLightMode(!LightMode);}})]}),/*#__PURE__*/_jsx(Header,{category:category,setCategory:setCategory,word:word,setWord:setWord,setMeanings:setMeanings,LightMode:LightMode}),meanings&&/*#__PURE__*/_jsx(Definitions,{word:word,meanings:meanings,category:category,LightMode:LightMode})]})});}export default App;","map":{"version":3,"sources":["/home/markus/dictionary-app/src/App.js"],"names":["axios","useEffect","useState","Container","withStyles","Header","Definitions","grey","Switch","App","word","setWord","meanings","setMeanings","category","setCategory","LightMode","setLightMode","DarkMode","switchBase","color","backgroundColor","checked","track","dictionaryApi","get","data","console","log","height","transition","display","flexDirection","justifyContent","position","top","right","paddingTop"],"mappings":"mbAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,mBAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,WAAT,KAA4B,yCAA5B,CACA,OAASC,IAAT,KAAqB,0BAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,C,wFAGA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBP,QAAQ,CAAC,EAAD,CAAhC,wCAAOQ,IAAP,eAAaC,OAAb,eACA,eAAgCT,QAAQ,CAAC,EAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAAgCX,QAAQ,CAAC,IAAD,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eACA,eAAkCb,QAAQ,CAAC,KAAD,CAA1C,yCAAOc,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,QAAQ,CAAGd,UAAU,CAAC,CAC1Be,UAAU,CAAE,CACVC,KAAK,CAAEb,IAAI,CAAC,GAAD,CADD,CAEV,YAAa,CACXa,KAAK,CAAEb,IAAI,CAAC,GAAD,CADA,CAFH,CAKV,qBAAsB,CACpBc,eAAe,CAAEd,IAAI,CAAC,GAAD,CADD,CALZ,CADc,CAU1Be,OAAO,CAAE,EAViB,CAW1BC,KAAK,CAAE,EAXmB,CAAD,CAAV,CAYdf,MAZc,CAAjB,CAeA,GAAMgB,CAAAA,aAAa,0FAAG,kLAECxB,CAAAA,KAAK,CAACyB,GAAN,wDAC+BX,QAD/B,aAC2CJ,IAD3C,EAFD,QAEZgB,IAFY,eAOhBb,WAAW,CAACa,IAAI,CAACA,IAAN,CAAX,CAPgB,+EAWlBC,OAAO,CAACC,GAAR,cAXkB,oEAAH,kBAAbJ,CAAAA,aAAa,0CAAnB,CAgBAvB,SAAS,CAAC,UAAM,CACduB,aAAa,GACd,CAFQ,CAAT,CAEK,sBAEL,mBACE,YACE,SAAS,CAAC,KADZ,CAEE,KAAK,CAAE,CACLK,MAAM,CAAE,OADH,CAELR,eAAe,CAAEL,SAAS,CAAG,MAAH,CAAY,SAFjC,CAGLI,KAAK,CAAEJ,SAAS,CAAG,OAAH,CAAa,OAHxB,CAILc,UAAU,CAAE,iBAJP,CAFT,uBAUE,MAAC,SAAD,EACE,QAAQ,CAAC,IADX,CAEE,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,aAAa,CAAC,QAFT,CAGLH,MAAM,CAAC,OAHF,CAILI,cAAc,CAAE,cAJX,CAFT,wBAUE,aAAK,KAAK,CAAE,CAAEC,QAAQ,CAAE,UAAZ,CAAwBC,GAAG,CAAE,CAA7B,CAAgCC,KAAK,CAAE,EAAvC,CAA2CC,UAAU,CAAE,EAAvD,CAAZ,wBACE,sBAAOrB,SAAS,CAAE,WAAF,CAAgB,YAAhC,EADF,cAGE,KAAC,QAAD,EAAU,OAAO,CAAEA,SAAnB,CACU,QAAQ,CAAE,0BAAKC,CAAAA,YAAY,CAAC,CAACD,SAAF,CAAjB,EADpB,EAHF,GAVF,cAiBE,KAAC,MAAD,EAAQ,QAAQ,CAAEF,QAAlB,CACQ,WAAW,CAAEC,WADrB,CAEQ,IAAI,CAAEL,IAFd,CAGQ,OAAO,CAAEC,OAHjB,CAIQ,WAAW,CAAEE,WAJrB,CAKQ,SAAS,CAAEG,SALnB,EAjBF,CAyBGJ,QAAQ,eACP,KAAC,WAAD,EACE,IAAI,CAAEF,IADR,CAEE,QAAQ,CAAEE,QAFZ,CAGE,QAAQ,CAAEE,QAHZ,CAIE,SAAS,CAAEE,SAJb,EA1BJ,GAVF,EADF,CAgDD,CAED,cAAeP,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport { Container, withStyles } from \"@material-ui/core\";\nimport Header from './components/header/Header';\nimport { Definitions } from './components/Definitions/Definitions.js';\nimport { grey } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\n\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightMode, setLightMode] = useState(false);\n\n  const DarkMode = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n        \n        );\n\n        setMeanings(data.data);\n\n    } catch(error) {\n\n      console.log(error);\n    }\n\n  }\n\n  useEffect(() => {\n    dictionaryApi();\n  }, ) /* [word, category] */\n\n  return (\n    <div \n      className=\"App\"\n      style={{ \n        height: \"100vh\", \n        backgroundColor: LightMode ? \"#fff\" : \"#282c34\", \n        color: LightMode ? \"black\" : \"white\",\n        transition: \"all 0.2s linear\",\n        }}\n        >\n\n      <Container \n        maxWidth=\"md\" \n        style={{ \n          display: \"flex\", \n          flexDirection:\"column\", \n          height:\"100vh\",\n          justifyContent: \"space-evenly\",\n          }}\n          >\n\n        <div style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10}}>\n          <span>{LightMode? \"Dark Mode\" : \"Light Mode\"}</span>\n\n          <DarkMode checked={LightMode} \n                    onChange={() =>setLightMode(!LightMode)} />\n        </div>\n\n        <Header category={category} \n                setCategory={setCategory} \n                word={word} \n                setWord={setWord}\n                setMeanings={setMeanings}\n                LightMode={LightMode}\n        />\n                \n        {meanings && (\n          <Definitions \n            word={word} \n            meanings={meanings} \n            category={category}\n            LightMode={LightMode} \n            \n            />\n          )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}