{"ast":null,"code":"var _jsxFileName = \"/home/markus/dictionary-app/word-hunt/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Container, withStyles } from \"@material-ui/core\";\nimport Header from './components/header/Header';\nimport { Definitions } from './components/Definitions/Definitions.js';\nimport { grey } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [word, setWord] = useState(\"Word Hunt\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightTheme, setLightTheme] = useState(false);\n  const GreySwitch = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500]\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500]\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`);\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(meanings);\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: \"100vh\",\n      backgroundColor: \"#282c34\",\n      color: \"white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolut\",\n          top: 0,\n          right: 15\n        },\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        category: category,\n        setCategory: setCategory,\n        word: word,\n        setWord: setWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), meanings && /*#__PURE__*/_jsxDEV(Definitions, {\n        word: word,\n        meanings: meanings,\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Mt7+CIB5Cx2gnBWm8ya2VhqzUlc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/markus/dictionary-app/word-hunt/src/App.js"],"names":["axios","useEffect","useState","Container","withStyles","Header","Definitions","grey","Switch","App","word","setWord","meanings","setMeanings","category","setCategory","LightTheme","setLightTheme","GreySwitch","switchBase","color","backgroundColor","checked","track","dictionaryApi","data","get","error","console","log","height","display","flexDirection","position","top","right"],"mappings":"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","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport { Container, withStyles } from \"@material-ui/core\";\nimport Header from './components/header/Header';\nimport { Definitions } from './components/Definitions/Definitions.js';\nimport { grey } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\n\nfunction App() {\n  const [word, setWord] = useState(\"Word Hunt\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightTheme, setLightTheme] = useState(false);\n\n  const GreySwitch = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n        \n        );\n\n        setMeanings(data.data);\n\n    } catch(error) {\n\n      console.log(error);\n    }\n\n  }\n\n  console.log(meanings);\n\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, category])\n\n  return (\n    <div \n      className=\"App\"\n      style={{ height: \"100vh\", backgroundColor: \"#282c34\", color: \"white\"}}>\n      <Container \n        maxWidth=\"md\" \n        style={{ display: \"flex\", flexDirection:\"column\", height:\"100vh\" }}>\n\n        <div style={{ position: \"absolut\", top: 0, right: 15}}>\n          Test\n        </div>\n        <Header category={category} \n                setCategory={setCategory} \n                word={word} \n                setWord={setWord}/>\n                \n        {meanings && (\n          <Definitions word={word} meanings={meanings} category={category} />\n          )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}